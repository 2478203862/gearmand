.TH "GEARMAN_JOB_WORKLOAD_SIZE" "3" "April 13, 2011" "0.20" "Gearmand"
.SH NAME
gearman_job_workload_size \- Gearmand Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructeredText.
.
.SH LIBRARY
.sp
C Client Library for Gearmand (libgearman, \-lgearman)
.SH SYNOPSIS
.sp
#include <libgearman/gearman.h>
.INDENT 0.0
.TP
.B gearman_job_st
.UNINDENT
.INDENT 0.0
.TP
.B void gearman_job_free(gearman_job_st *job);
.UNINDENT
.INDENT 0.0
.TP
.B gearman_return_t gearman_job_send_data(gearman_job_st *job, const void *data, size_t data_size);
.UNINDENT
.INDENT 0.0
.TP
.B gearman_return_t gearman_job_send_warning(gearman_job_st *job, const void *warning, size_t warning_size);
.UNINDENT
.INDENT 0.0
.TP
.B gearman_return_t gearman_job_send_status(gearman_job_st *job, uint32_t numerator, uint32_t denominator);
.UNINDENT
.INDENT 0.0
.TP
.B gearman_return_t gearman_job_send_complete(gearman_job_st *job, const void *result, size_t result_size);
.UNINDENT
.INDENT 0.0
.TP
.B gearman_return_t gearman_job_send_exception(gearman_job_st *job, const void *exception, size_t exception_size);
.UNINDENT
.INDENT 0.0
.TP
.B gearman_return_t gearman_job_send_fail(gearman_job_st *job);
.UNINDENT
.INDENT 0.0
.TP
.B const char *gearman_job_handle(const gearman_job_st *job);
.UNINDENT
.INDENT 0.0
.TP
.B const char *gearman_job_function_name(const gearman_job_st *job);
.UNINDENT
.INDENT 0.0
.TP
.B const char *gearman_job_unique(const gearman_job_st *job);
.UNINDENT
.INDENT 0.0
.TP
.B const void *gearman_job_workload(const gearman_job_st *job);
.UNINDENT
.INDENT 0.0
.TP
.B size_t gearman_job_workload_size(const gearman_job_st *job);
.UNINDENT
.INDENT 0.0
.TP
.B void *gearman_job_take_workload(gearman_job_st *job, size_t *data_size);
.UNINDENT
.SH DESCRIPTION
.sp
This a complete list of all functions that work with a gearman_job_st,
see their individual pages to learn more about them.
.SH RETURN
.sp
A value of type \fBgearman_return_t\fP is returned.
On success that value will be \fBGEARMAN_SUCCESS\fP.
Use gearman_strerror() to translate this value to a printable string.
.SH HOME
.sp
To find out more information please check:
\fI\%https://launchpad.net/gearmand\fP
.SH SEE ALSO
.sp
\fIgearmand(1)\fP \fIlibgearman(3)\fP
.SH AUTHOR
Data Differential http://datadifferential.com/
.SH COPYRIGHT
2011, Data Differential, http://datadifferential.com/
.\" Generated by docutils manpage writer.
.\" 
.

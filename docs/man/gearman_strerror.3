.TH "GEARMAN_STRERROR" "3" "June 19, 2011" "0.22" "Gearmand"
.SH NAME
gearman_strerror \- Gearmand Documentation, http://gearman.info/
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructeredText.
.
.SH SYNOPSIS
.sp
#include <libgearman/gearman.h>
.INDENT 0.0
.TP
.B gearman_return_t
.UNINDENT
.INDENT 0.0
.TP
.B const char *gearman_strerror(\fI\%gearman_return_t\fP\fI\ rc\fP)
.UNINDENT
.INDENT 0.0
.TP
.B bool gearman_success(\fI\%gearman_return_t\fP\fI\ rc\fP)
.UNINDENT
.INDENT 0.0
.TP
.B bool gearman_failed(\fI\%gearman_return_t\fP\fI\ rc\fP)
.UNINDENT
.INDENT 0.0
.TP
.B bool gearman_continue(\fI\%gearman_return_t\fP\fI\ rc\fP)
.UNINDENT
.sp
Compile and link with \-lgearman
.SH DESCRIPTION
.sp
\fI\%gearman_return_t\fP is used as a return/error type for all calls using \fBgearman_client_st\fP and \fBgearman_worker_st\fP.
\fI\%GEARMAN_SUCCESS\fP is returned upon success, otherwise an error is returned. \fI\%gearman_failed()\fP can be used to see if the return value is a failing value.
You can print a text version of the error message with \fI\%gearman_strerror()\fP.
.sp
\fI\%gearman_success()\fP return true if \fI\%GEARMAN_SUCCESS\fP or if
\fI\%GEARMAN_NO_PENDING_TASKS\fP tests true.
.sp
\fI\%gearman_failed()\fP return true if any value other then \fI\%GEARMAN_SUCCESS\fP was provided.
.sp
\fI\%gearman_continue()\fP returns true if any error related to non\-blocking IO
occurred. This should be used for testing loops.
.sp
Possible values of \fI\%gearman_return_t\fP:
.INDENT 0.0
.TP
.B GEARMAN_SUCCESS
.UNINDENT
.sp
Success
.INDENT 0.0
.TP
.B GEARMAN_NO_PENDING_TASKS
.UNINDENT
.sp
\fBgearman_client_run_tasks()\fP was called and it has completed all tasks assigned to the client.
.INDENT 0.0
.TP
.B GEARMAN_IO_WAIT
.UNINDENT
.sp
Blocking IO was found. gearman_continue() can be used to
test for this.
.INDENT 0.0
.TP
.B GEARMAN_ERRNO
.UNINDENT
.sp
System error occurred. Use either \fBgearman_client_errno()\fP or \fBgearman_worker_errno()\fP
.INDENT 0.0
.TP
.B GEARMAN_NO_ACTIVE_FDS
.UNINDENT
.sp
No active connections were available.  gearman_continue() can be used to test for this.
.INDENT 0.0
.TP
.B GEARMAN_GETADDRINFO
.UNINDENT
.sp
Name resolution failed for a host.
.INDENT 0.0
.TP
.B GEARMAN_NO_SERVERS
.UNINDENT
.sp
No servers have been provided for the client/worker.
.INDENT 0.0
.TP
.B GEARMAN_LOST_CONNECTION
.UNINDENT
.sp
Connection was lost to the given server.
.INDENT 0.0
.TP
.B GEARMAN_MEMORY_ALLOCATION_FAILURE
.UNINDENT
.sp
Memory allocation failed.
.INDENT 0.0
.TP
.B GEARMAN_SERVER_ERROR
.UNINDENT
.sp
An error occurred on the server.
.INDENT 0.0
.TP
.B GEARMAN_NOT_CONNECTED
.UNINDENT
.sp
Client/Worker is not currently connected to the
server.
.INDENT 0.0
.TP
.B GEARMAN_COULD_NOT_CONNECT
.UNINDENT
.sp
Server name was valid, but a connection could not
be made.
.INDENT 0.0
.TP
.B GEARMAN_ECHO_DATA_CORRUPTION
.UNINDENT
.sp
Either \fBgearman_client_echo()\fP or
\fBgearman_work_echo()\fP echo was unsuccessful because the data was returned from \fBgearmand\fP corrupted.
.INDENT 0.0
.TP
.B GEARMAN_UNKNOWN_STATE
.UNINDENT
.sp
The gearman_return_t was never set.
.INDENT 0.0
.TP
.B GEARMAN_FLUSH_DATA
.UNINDENT
.sp
Internal state, should never be seen by either client or worker.
.INDENT 0.0
.TP
.B GEARMAN_SEND_BUFFER_TOO_SMALL
.UNINDENT
.sp
Send buffer was too small.
.INDENT 0.0
.TP
.B GEARMAN_TIMEOUT
.UNINDENT
.sp
A timeout occurred when making a request to the server.
.INDENT 0.0
.TP
.B GEARMAN_ARGUMENT_TOO_LARGE
.UNINDENT
.sp
Argument was too large for the current buffer.
.INDENT 0.0
.TP
.B GEARMAN_INVALID_ARGUMENT
.UNINDENT
.sp
One of the arguments to the given API call was invalid. EINVAL will be set
if \fBgearman_client_error()\fP or \fBgearman_worker_error()\fP were
not settable. This can also be returned if
\fBGEARMAN_CLIENT_UNBUFFERED_RESULT\fP was set, but the client is not
handling the data correctly.
.SS CLIENT ONLY
.INDENT 0.0
.TP
.B GEARMAN_NEED_WORKLOAD_FN
.UNINDENT
.sp
A client was asked for work, but no \fBgearman_workload_fn\fP callback was
specified. See \fBgearman_client_set_workload_fn()\fP
.INDENT 0.0
.TP
.B GEARMAN_WORK_FAIL
.UNINDENT
.sp
A task has failed, and the worker has exited with an error or it called \fBgearman_job_send_fail()\fP
.INDENT 0.0
.TP
.B GEARMAN_IN_PROGRESS
.UNINDENT
.sp
\fBgearman_client_job_status()\fP has been called for a \fBgearman_job_handle_t\fP and the Job is currently being run by a worker.
.INDENT 0.0
.TP
.B GEARMAN_JOB_EXISTS
.UNINDENT
.sp
\fBgearman_client_job_status()\fP has been called for a \fBgearman_job_handle_t\fP and the Job is currently known by a server, but is not being run by a worker.
.SS WORKER ONLY
.INDENT 0.0
.TP
.B GEARMAN_INVALID_FUNCTION_NAME
.UNINDENT
.sp
A worker was sent a request for a job that it did not have a valid function for.
.INDENT 0.0
.TP
.B GEARMAN_INVALID_WORKER_FUNCTION
.UNINDENT
.sp
No callback was provided by the worker for a given function.
.INDENT 0.0
.TP
.B GEARMAN_NO_REGISTERED_FUNCTION
.UNINDENT
.sp
A request for removing a given function from a worker was invalid since that function did not exist.
.INDENT 0.0
.TP
.B GEARMAN_NO_REGISTERED_FUNCTIONS
.UNINDENT
.sp
The worker has not registered any functions.
.INDENT 0.0
.TP
.B GEARMAN_NO_JOBS
.UNINDENT
.sp
No jobs were found for the worker.
.SS WORKER TO CLIENT
.sp
Client which have registed a custom \fBgearman_actions_t\fP may use these
value as return values to the calling client.
.INDENT 0.0
.TP
.B GEARMAN_WORK_DATA
.UNINDENT
.sp
Worker has sent a chunked piece of data to the client via \fBgearman_job_send_data()\fP
.INDENT 0.0
.TP
.B GEARMAN_WORK_WARNING
.UNINDENT
.sp
Worker has issued a warning to the client via \fBgearman_job_send_warning()\fP
.INDENT 0.0
.TP
.B GEARMAN_WORK_STATUS
.UNINDENT
.sp
Status has been updated by the worker via \fBgearman_job_send_status()\fP
.INDENT 0.0
.TP
.B GEARMAN_WORK_EXCEPTION
.UNINDENT
.sp
Worker has sent an exception the client via \fBgearman_job_send_exception()\fP
.INDENT 0.0
.TP
.B GEARMAN_WORK_FAIL
.UNINDENT
.sp
A task has failed, and the worker has exited with an error or it called \fBgearman_job_send_fail()\fP
.INDENT 0.0
.TP
.B GEARMAN_WORK_ERROR
.UNINDENT
.sp
A task has had an error and will be retried.
.INDENT 0.0
.TP
.B GEARMAN_PAUSE
.UNINDENT
.sp
Used only in custom application for client return based on \fI\%GEARMAN_WORK_DATA\fP, \fI\%GEARMAN_WORK_WARNING\fP, \fI\%GEARMAN_WORK_EXCEPTION\fP, \fI\%GEARMAN_WORK_FAIL\fP, or \fI\%GEARMAN_WORK_STATUS\fP. \fI\%gearman_continue()\fP can be used to check for this value.
.SS WORKER TO CLIENT
.sp
Any function defined by \fBgearman_worker_define_function()\fP may, and can only, return the following \fI\%gearman_return_t\fP values.
.INDENT 0.0
.TP
.B GEARMAN_SUCCESS
.UNINDENT
.sp
The function successfully completed the job.
.INDENT 0.0
.TP
.B GEARMAN_FATAL
.UNINDENT
.sp
The function failed to complete the job.
.INDENT 0.0
.TP
.B GEARMAN_ERROR
.UNINDENT
.sp
A task has had an error and will be retried.
.SS TASK ONLY
.INDENT 0.0
.TP
.B GEARMAN_NOT_FLUSHING
.UNINDENT
.sp
\fBgearman_task_send_workload()\fP failed, it was not in the correct state.
.INDENT 0.0
.TP
.B GEARMAN_DATA_TOO_LARGE
.UNINDENT
.sp
\fBgearman_task_send_workload()\fP failed, the data was too large to be sent.
.SS PROTOCOL
.sp
If any of these errors occurred the connection will be dropped/reset.
.INDENT 0.0
.TP
.B GEARMAN_INVALID_MAGIC
.UNINDENT
.INDENT 0.0
.TP
.B GEARMAN_INVALID_COMMAND
.UNINDENT
.INDENT 0.0
.TP
.B GEARMAN_INVALID_PACKET
.UNINDENT
.INDENT 0.0
.TP
.B GEARMAN_UNEXPECTED_PACKET
.UNINDENT
.INDENT 0.0
.TP
.B GEARMAN_TOO_MANY_ARGS
.UNINDENT
.SH SEE ALSO
.sp
\fIgearmand(8)\fP \fIlibgearman(3)\fP \fIgearman_client_error()\fP or \fIgearman_worker_error()\fP
.SH AUTHOR
Data Differential http://datadifferential.com/
.SH COPYRIGHT
2011, Data Differential, http://datadifferential.com/
.\" Generated by docutils manpage writer.
.\" 
.

.TH "GEARMAN_CLIENT_FREE" "3" "April 13, 2011" "0.20" "Gearmand"
.SH NAME
gearman_client_free \- Gearmand Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.\" Man page generated from reStructeredText.
.
.SH LIBRARY
.sp
C Client Library for Gearmand (libgearman, \-lgearman)
.SH SYNOPSIS
.sp
#include <libgearman/gearman.h>
.INDENT 0.0
.TP
.B gearman_client_st *gearman_client_create(gearman_client_st *client);
.UNINDENT
.INDENT 0.0
.TP
.B gearman_client_st *gearman_client_clone(gearman_client_st *client, const gearman_client_st *from);
.UNINDENT
.INDENT 0.0
.TP
.B void gearman_client_free(gearman_client_st *client);
.UNINDENT
.SH DESCRIPTION
.sp
gearman_client_create() is used to create a \fBgearman_client_st\fP structure that will then
be used by other libgearman(3) client functions to communicate with the server. You
should either pass a statically declared \fBgearman_client_st\fP to gearman_client_create() or
a NULL. If a NULL passed in then a structure is allocated for you.
.sp
gearman_client_clone() is similar to gearman_client_create(3) but it copies the
defaults and list of servers from the source \fBgearman_client_st\fP. If you pass a null as
the argument for the source to clone, it is the same as a call to gearman_client_create().
If the destination argument is NULL a \fBgearman_client_st\fP will be allocated for you.
.sp
To clean up memory associated with a \fBgearman_client_st\fP structure you should pass
it to gearman_client_free() when you are finished using it. gearman_client_free() is
the only way to make sure all memory is deallocated when you finish using
the structure.
.sp
You may wish to avoid using gearman_client_create(3) or gearman_client_clone(3) with a
stack based allocation, ie the first parameter. The most common issues related to ABI safety involve
heap allocated structures.
.SH RETURN
.sp
gearman_client_create() returns a pointer to the gearman_client_st that was created
(or initialized). On an allocation failure, it returns NULL.
.sp
gearman_client_clone() returns a pointer to the gearman_client_st that was created
(or initialized). On an allocation failure, it returns NULL.
.SH HOME
.sp
To find out more information please check:
\fI\%https://launchpad.net/gearmand\fP
.SH SEE ALSO
.sp
\fIgearmand(1)\fP \fIlibgearman(3)\fP \fIgearman_strerror(3)\fP
.SH AUTHOR
Data Differential http://datadifferential.com/
.SH COPYRIGHT
2011, Data Differential, http://datadifferential.com/
.\" Generated by docutils manpage writer.
.\" 
.
